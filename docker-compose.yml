# docker-compose.yml
version: '3'

services:
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - '29092:29092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:9092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8085:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      DYNAMIC_CONFIG_ENABLED: 'true'

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - '22181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  minio:
    image: quay.io/minio/minio:latest
    volumes:
      - ./data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: 'minio_user'
      MINIO_ROOT_PASSWORD: 'minio_password'
      MINIO_ADDRESS: ':9000'
      MINIO_CONSOLE_ADDRESS: ':9001'
    command: minio server /data

  video_loader:
    image: ghcr.io/apoorva64/video-transcoder-2/transcoder
    build:
      context: .
      dockerfile: Dockerfile
    restart: always

    depends_on:
      - kafka-ui
    env_file:
      - .env
    command: python3 -u src/video_loader.py

  splitter:
    image: ghcr.io/apoorva64/video-transcoder-2/transcoder
    build:
      context: .
      dockerfile: Dockerfile
    restart: always

    depends_on:
      - kafka-ui
    env_file:
      - .env
    command: python3 -u src/splitter.py

  transcoder:
    image: ghcr.io/apoorva64/video-transcoder-2/transcoder
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - kafka-ui
    env_file:
      - .env

    command: python3 -u src/transcoder.py

  transcoder-gpu:
    image: ghcr.io/apoorva64/video-transcoder-2/transcoder-gpu
    restart: always
    build:
      context: .
      dockerfile: cuda.dockerfile
    depends_on:
      - kafka-ui
    env_file:
      - .env
    environment:
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: compute,utility,video
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]

    command: python3 -u src/transcoder.py

  concater:
    image: ghcr.io/apoorva64/video-transcoder-2/transcoder
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - kafka-ui
    env_file:
      - .env
    command: python3 -u src/concater.py
